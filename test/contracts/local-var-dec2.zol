// SPDX-License-Identifier: CC0

pragma solidity ^0.8.0;

contract Bank {

  address public admin;
  uint256 public interestRate; // *100
  uint256 public numberInterestUpdates; // replaces time delay
  mapping(address => uint256) interestUpdates;
  secret mapping(address => uint256) private account;

  constructor() {
    admin = msg.sender;
  }

  function deposit(secret uint256 amount) public {
    account[msg.sender] += amount;
  }

  function withdraw(secret uint256 amount) public {
    require(interestUpdates[msg.sender] == numberInterestUpdates);
    account[msg.sender] -= amount;
  }

  function updateInterestRate(uint256 rate) public {
    require(msg.sender == admin);
    interestRate = rate;
    numberInterestUpdates++;
  }

  function updateAccountBalance() public {
    require(interestUpdates[msg.sender] < numberInterestUpdates);
    account[msg.sender] = (account[msg.sender] * interestRate)/100;
  }

}
